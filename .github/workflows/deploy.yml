name: containerapp deploy azure

on:
  push:
    branches:
      - containerapp_deploy
  workflow_dispatch:

env:
  ACR_NAME: corefrontend
  IMAGE_NAME: core-frontend-about
  RESOURCE_GROUP: core-frontend
  CONTAINERAPP_NAME: core-frontend-about
  GA_CODE: ${{ secrets.GA_CODE }}
  PORT: 8080

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set Git SHA tag
        id: set_tag
        run: echo "tag=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Docker ACR Login
        run: az acr login --name ${{ env.ACR_NAME }}

      - name: Docker Build
        run: |
          docker build \
            --build-arg GA_CODE=${{ secrets.GA_CODE }}} \
            --build-arg NPM_TOKEN=${{ secrets.NPM_TOKEN }} \
            --build-arg NODE_ENV=${{ secrets.NODE_ENV }} \
            -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.set_tag.outputs.tag }} \
            -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest .

      - name: Docker Push
        run: |
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.set_tag.outputs.tag }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      TAG: ${{ needs.build-and-push.outputs.tag }}

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Container App
        run: |
          az containerapp update \
            --name ${{ env.CONTAINERAPP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.TAG }} \
            --container-name ${{ env.IMAGE_NAME }} \
            --set configuration.ingress.targetPort=${{ env.PORT }}
#            --container-port ${{ env.PORT }}
